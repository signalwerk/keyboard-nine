{"version":3,"sources":["components/Text/index.js","settings.js","store/index.js","isMounted.js","components/Button/index.js","components/Block/index.js","components/KeyboardNine/index.js","components/Key/index.js","components/KeyboardClassic/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["replaceSpacesWithNbsp","str","replace","Text","context","textLines","text","split","lineCount","length","className","lastBlock","map","item","index","key","lastChar","substr","textMinusLast","substring","lastLine","TYPEMODE","KEYBOARD","ORIENTATION","PUNCTUATION","KEYS","reduce","accumulator","currentChar","upperChar","toUpperCase","label","normal","cap","punct","value","BLOCKS","block01","block02","block03","block04","block05","block06","block07","UIContext","React","createContext","UIConsumer","Consumer","UIProvider","timedCallback","state","keyboardStyle","orientation","typeMode","lastBlockTypeMode","blockCharIndex","clearTimeout","startKeyPress","setState","startBlockPress","block","newText","setTimeout","endBlockPress","startBackspace","endBackspace","append","setTypeMode","mode","setKeyboardStyle","Provider","this","action","props","children","Component","useIsMounted","isMounted","useRef","useEffect","current","Button","onStart","onEnd","active","width","heigh","useState","clicked","setClicked","onMouseDown","e","onMouseUp","onTouchStart","preventDefault","onTouchEnd","Block","id","KeyboardNine","Key","KeyboardClassic","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e35dc702.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport \"./styles.css\";\n\nlet replaceSpacesWithNbsp = str => {\n  // 'ZERO WIDTH SPACE' (U+200B)\n  // Non-breakable space is char 0xa0 (160 dec)\n  return str.replace(/[ ]/g, \"\\xa0\\u200B\");\n};\n\nlet lastLine = text => {\n  let lastChar = text.substr(-1);\n  let textMinusLast = text.substring(0, text.length - 1);\n\n  return (\n    <Fragment>\n      {replaceSpacesWithNbsp(textMinusLast)}\n      <span className=\"Text__lastChar\">{replaceSpacesWithNbsp(lastChar)}</span>\n      <span className=\"Text__cursor\"></span>\n    </Fragment>\n  );\n};\n\nfunction Text({ context }) {\n  let textLines = context.text.split(\"\\n\");\n  let lineCount = textLines.length;\n  // <p>{lastLine(context.text)}</p>\n\n  return (\n    <div\n      className={`Text Text--${\n        context.lastBlock ? \"lastBlock\" : \"noLastBlock\"\n      }`}\n    >\n      {textLines.map((item, index) => {\n        if (index === lineCount - 1) {\n          return (\n            <p className=\"Text__line\" key={index}>\n              {lastLine(item)}\n            </p>\n          );\n        } else {\n          return (\n            <p className=\"Text__line\" key={index}>\n              {replaceSpacesWithNbsp(item)}&nbsp;\n            </p>\n          );\n        }\n      })}\n    </div>\n  );\n}\n\nexport default Text;\n","export const TYPEMODE = {\n  NORMAL: \"normal\",\n  CAP: \"cap\",\n  PUNCTUATION: \"punct\"\n};\n\nexport const KEYBOARD = {\n  NINE: \"nine\",\n  CLASSIC: \"classic\"\n};\n\nexport const ORIENTATION = {\n  R: \"r\",\n  L: \"l\"\n};\n\nexport const BLOCK_TIMEOUT = 400;\nexport const REPEAT_TIMEOUT = 300;\n\n// to keep everything super configurable\nconst keyReducer = (accumulator, currentChar, index) => {\n  const upperChar = currentChar.toUpperCase();\n  return {\n    ...accumulator,\n    [`key${upperChar}`]: {\n      label: {\n        normal: currentChar,\n        cap: upperChar,\n        punct: PUNCTUATION[index]\n      },\n      value: {\n        normal: currentChar,\n        cap: upperChar,\n        punct: PUNCTUATION[index]\n      }\n    }\n  };\n};\n\nconst PUNCTUATION = \"0123456789.:;?!/(){}&%+-$§\".split(\"\");\nexport const KEYS = \"qzdpjgwbycnlustmxfoaeihrvk\"\n  .split(\"\")\n  .reduce(keyReducer, {});\n\nexport const BLOCKS = {\n  block01: {\n    label: {\n      normal: \"abcd\",\n      cap: \"ABCD\"\n    },\n    value: {\n      normal: [\"a\", \"b\", \"c\", \"d\"],\n      cap: [\"A\", \"B\", \"C\", \"D\"]\n    }\n  },\n  block02: {\n    label: {\n      normal: \"efghi\",\n      cap: \"EFGHI\"\n    },\n    value: {\n      normal: [\"e\", \"f\", \"g\", \"h\", \"i\"],\n      cap: [\"E\", \"F\", \"G\", \"H\", \"I\"]\n    }\n  },\n  block03: {\n    label: {\n      normal: \"jklm\",\n      cap: \"JKLM\"\n    },\n    value: {\n      normal: [\"j\", \"k\", \"l\", \"m\"],\n      cap: [\"J\", \"K\", \"L\", \"M\"]\n    }\n  },\n  block04: {\n    label: {\n      normal: \"nopq\",\n      cap: \"NOPQ\"\n    },\n    value: {\n      normal: [\"n\", \"o\", \"p\", \"q\"],\n      cap: [\"N\", \"O\", \"P\", \"Q\"]\n    }\n  },\n  block05: {\n    label: {\n      normal: \"rstuv\",\n      cap: \"RSTUV\"\n    },\n    value: {\n      normal: [\"r\", \"s\", \"t\", \"u\", \"v\"],\n      cap: [\"R\", \"S\", \"T\", \"U\", \"V\"]\n    }\n  },\n  block06: {\n    label: {\n      normal: \"wxyz\",\n      cap: \"WXYZ\"\n    },\n    value: {\n      normal: [\"w\", \"x\", \"y\", \"z\"],\n      cap: [\"W\", \"X\", \"Y\", \"Z\"]\n    }\n  },\n  block07: {\n    label: {\n      normal: \"äöü_\",\n      cap: \"ÄÖÜ_\"\n    },\n    value: {\n      normal: [\"ä\", \"ö\", \"ü\", \"_\"],\n      cap: [\"Ä\", \"Ö\", \"Ü\", \"_\"]\n    }\n  }\n};\n","import React, { Component } from \"react\";\nimport {\n  TYPEMODE,\n  BLOCKS,\n  BLOCK_TIMEOUT,\n  ORIENTATION,\n  REPEAT_TIMEOUT,\n  KEYBOARD,\n  KEYS\n} from \"../settings\";\n\nexport const UIContext = React.createContext();\nexport const UIConsumer = UIContext.Consumer;\n\nexport class UIProvider extends Component {\n  // callback for some buttons\n  timedCallback = null;\n\n  state = {\n    text: \"Hello world!\\nPlease type ...\",\n\n    keyboardStyle: KEYBOARD.NINE,\n\n    orientation: ORIENTATION.R,\n\n    typeMode: TYPEMODE.NORMAL, // are we in normal writing or cap\n\n    // last block touched\n    lastBlock: null,\n    lastBlockTypeMode: null,\n\n    // char in block\n    blockCharIndex: 0\n  };\n\n  clearTimeout = () => {\n    clearTimeout(this.timedCallback);\n  };\n\n  startKeyPress = key => {\n    this.clearTimeout();\n\n    const text = this.state.text + KEYS[key].value[this.state.typeMode];\n    this.setState({\n      ...this.state,\n      typeMode:\n        this.state.typeMode === TYPEMODE.CAP\n          ? TYPEMODE.NORMAL\n          : this.state.typeMode,\n      text,\n      lastBlock: null\n    });\n  };\n\n  startBlockPress = block => {\n    this.clearTimeout();\n\n    let blockCharIndex = 0;\n    let typeMode = this.state.typeMode;\n\n    let newText = this.state.text;\n\n    // press on same block\n    if (this.state.lastBlock === block) {\n      blockCharIndex = this.state.blockCharIndex + 1;\n\n      // kill last char\n      newText = newText.substring(0, newText.length - 1);\n      typeMode = this.state.lastBlockTypeMode;\n    }\n\n    newText =\n      newText +\n      BLOCKS[block].value[typeMode][\n        blockCharIndex % BLOCKS[block].value[typeMode].length\n      ];\n\n    this.setState({\n      ...this.state,\n      text: newText,\n      typeMode: TYPEMODE.NORMAL,\n      lastBlockTypeMode: typeMode,\n      blockCharIndex,\n      lastBlock: block\n    });\n\n    this.timedCallback = setTimeout(() => {\n      this.startBlockPress(block);\n    }, REPEAT_TIMEOUT);\n  };\n\n  endBlockPress = block => {\n    // nothing\n    this.clearTimeout();\n\n    this.timedCallback = setTimeout(() => {\n      this.setState({\n        ...this.state,\n\n        lastBlock: null\n      });\n    }, BLOCK_TIMEOUT);\n  };\n\n  startBackspace = () => {\n    this.clearTimeout();\n\n    const text = this.state.text.substring(0, this.state.text.length - 1);\n    this.setState({\n      ...this.state,\n      text,\n      lastBlock: null\n    });\n\n    this.timedCallback = setTimeout(() => {\n      this.startBackspace();\n    }, REPEAT_TIMEOUT);\n  };\n\n  endBackspace = () => {\n    this.clearTimeout();\n  };\n\n  append = str => {\n    this.clearTimeout();\n\n    const text = this.state.text + str;\n    this.setState({\n      ...this.state,\n      text,\n      lastBlock: null\n    });\n  };\n\n  setTypeMode = mode => {\n    this.clearTimeout();\n\n    this.setState({\n      ...this.state,\n      typeMode: mode\n    });\n  };\n\n  orientation = orientation => {\n    this.clearTimeout();\n\n    this.setState({\n      ...this.state,\n      orientation\n    });\n  };\n\n  setKeyboardStyle = keyboardStyle => {\n    this.clearTimeout();\n\n    this.setState({\n      ...this.state,\n      typeMode: TYPEMODE.NORMAL,\n      keyboardStyle\n    });\n  };\n\n  render() {\n    return (\n      <UIContext.Provider\n        value={{\n          ...this.state,\n\n          action: {\n            startBlockPress: this.startBlockPress,\n            endBlockPress: this.endBlockPress,\n\n            startKeyPress: this.startKeyPress,\n\n            startBackspace: this.startBackspace,\n            endBackspace: this.endBackspace,\n            append: this.append,\n            setTypeMode: this.setTypeMode,\n            orientation: this.orientation,\n            setKeyboardStyle: this.setKeyboardStyle\n          }\n        }}\n      >\n        {this.props.children}\n      </UIContext.Provider>\n    );\n  }\n}\n","import { useRef, useEffect } from \"react\";\n\nconst useIsMounted = () => {\n  const isMounted = useRef(false);\n  useEffect(() => {\n    isMounted.current = true;\n    return () => (isMounted.current = false);\n  }, []);\n  return isMounted;\n};\n\nexport default useIsMounted;\n","import React, { useState } from \"react\";\nimport useIsMounted from \"../../isMounted\";\n\nimport \"./styles.css\";\n\nfunction Button({ label, onStart, onEnd, active, width, heigh, className }) {\n  const [clicked, setClicked] = useState(false);\n  const isMounted = useIsMounted();\n\n  return (\n    <button\n      className={`${className ? `${className} ` : \"\"}Button Button--${\n        active ? \"active\" : \"normal\"\n      } Button--width-${width ? width : \"normal\"} Button--heigh-${\n        heigh ? heigh : \"normal\"\n      } Button--clicked-${clicked ? \"yes\" : \"no\"}`}\n      onMouseDown={e => {\n        if (onStart) {\n          onStart(e);\n        }\n        setClicked(true);\n      }}\n      onMouseUp={e => {\n        if (onEnd) {\n          onEnd(e);\n        }\n        setTimeout(() => {\n          if (isMounted.current) {\n            setClicked(false);\n          }\n        }, 100);\n      }}\n      onTouchStart={e => {\n        if (onStart) {\n          onStart(e);\n        }\n        setClicked(true);\n        e.preventDefault();\n      }}\n      onTouchEnd={e => {\n        if (onEnd) {\n          onEnd(e);\n        }\n        setTimeout(() => {\n          if (isMounted.current) {\n            setClicked(false);\n          }\n        }, 100);\n        e.preventDefault();\n      }}\n    >\n      {label}\n    </button>\n  );\n}\n\nexport default Button;\n","import React from \"react\";\nimport \"./styles.css\";\nimport { UIConsumer } from \"../../store\";\nimport { BLOCKS } from \"../../settings\";\nimport Button from \"../Button\";\n\nfunction Block({ id, className }) {\n  return (\n    <UIConsumer>\n      {context => (\n        <Button\n          className={`${className ? `${className} ` : \"\"}Button--block`}\n          onStart={e => context.action.startBlockPress(id)}\n          onEnd={e => context.action.endBlockPress(id)}\n          label={BLOCKS[id].label[context.typeMode]}\n          width=\"1-3\"\n        ></Button>\n      )}\n    </UIConsumer>\n  );\n}\n\nexport default Block;\n","import React, { Fragment } from \"react\";\nimport \"./styles.css\";\nimport Block from \"../Block\";\nimport Button from \"../Button\";\nimport { TYPEMODE, ORIENTATION, KEYBOARD } from \"../../settings\";\n\nimport { UIConsumer } from \"../../store\";\n\nfunction KeyboardNine() {\n  return (\n    <UIConsumer>\n      {context => (\n        <div className=\"KeyboardNine\">\n          <div className=\"KeyboardNine__main\">\n            <Block className=\"Button--borderTopBlack \" id=\"block01\" />\n            <Block\n              className=\"Button--borderTopBlack Button--borderLeft\"\n              id=\"block02\"\n              width=\"large\"\n            />\n            <Block\n              className=\"Button--borderTopBlack Button--borderLeft\"\n              id=\"block03\"\n              width=\"large\"\n            />\n            <Block className=\"Button--borderTop\" id=\"block04\" width=\"large\" />\n            <Block\n              className=\"Button--borderTop Button--borderLeft\"\n              id=\"block05\"\n              width=\"large\"\n            />\n            <Block\n              className=\"Button--borderTop Button--borderLeft\"\n              id=\"block06\"\n              width=\"large\"\n            />\n\n            {context.orientation === ORIENTATION.L ? (\n              <Fragment>\n                <Button\n                  className=\"Button--borderTop\"\n                  onStart={e => context.action.startBackspace()}\n                  onEnd={e => context.action.endBackspace()}\n                  label=\"⌫\"\n                  width=\"1-3\"\n                ></Button>\n                <Button\n                  className=\"Button--borderTop Button--borderLeft\"\n                  onEnd={e => context.action.append(\" \")}\n                  label=\"Space\"\n                  width=\"1-3\"\n                ></Button>\n                <Block\n                  className=\"Button--borderTop Button--borderLeft\"\n                  id=\"block07\"\n                  width=\"large\"\n                />\n\n                <Button\n                  className=\"Button--borderTop Button--negative\"\n                  onEnd={e => context.action.orientation(ORIENTATION.L)}\n                  label=\"L\"\n                  active={true}\n                  width=\"1-6\"\n                  heigh=\"med\"\n                ></Button>\n                <Button\n                  className=\"Button--borderTop Button--borderLeft\"\n                  onEnd={e => context.action.append(\"\\n\")}\n                  label=\"‎⏎\"\n                  heigh=\"med\"\n                  width=\"1-3\"\n                ></Button>\n                <Button\n                  className=\"Button--borderTop Button--borderLeft\"\n                  onEnd={e =>\n                    context.action.setTypeMode(\n                      context.typeMode === TYPEMODE.CAP\n                        ? TYPEMODE.NORMAL\n                        : TYPEMODE.CAP\n                    )\n                  }\n                  label=\"⇪\"\n                  active={context.typeMode === TYPEMODE.CAP}\n                  width=\"1-6\"\n                  heigh=\"med\"\n                ></Button>\n                <Button\n                  className=\"Button--borderTop Button--borderLeft\"\n                  label=\"🌐\"\n                  width=\"1-6\"\n                  heigh=\"med\"\n                  onEnd={e => context.action.setKeyboardStyle(KEYBOARD.CLASSIC)}\n                ></Button>\n                <Button\n                  className=\"Button--negative Button--borderTop Button--borderLeft\"\n                  onEnd={e => context.action.orientation(ORIENTATION.R)}\n                  label=\"R\"\n                  width=\"1-6\"\n                  heigh=\"med\"\n                ></Button>\n              </Fragment>\n            ) : (\n              <Fragment>\n                <Block\n                  className=\"Button--borderTop\"\n                  id=\"block07\"\n                  width=\"large\"\n                />\n                <Button\n                  className=\"Button--borderTop Button--borderLeft\"\n                  onEnd={e => context.action.append(\" \")}\n                  label=\"Space\"\n                  width=\"1-3\"\n                ></Button>\n                <Button\n                  className=\"Button--borderTop Button--borderLeft\"\n                  onStart={e => context.action.startBackspace()}\n                  onEnd={e => context.action.endBackspace()}\n                  label=\"⌫\"\n                  width=\"1-3\"\n                ></Button>\n\n                <Button\n                  className=\"Button--borderTop Button--negative\"\n                  onEnd={e => context.action.orientation(ORIENTATION.L)}\n                  label=\"L\"\n                  width=\"1-6\"\n                  heigh=\"med\"\n                ></Button>\n                <Button\n                  className=\"Button--borderTop Button--borderLeft\"\n                  label=\"🌐\"\n                  width=\"1-6\"\n                  heigh=\"med\"\n                  onEnd={e => context.action.setKeyboardStyle(KEYBOARD.CLASSIC)}\n                ></Button>\n                <Button\n                  className=\"Button--borderTop Button--borderLeft\"\n                  onEnd={e =>\n                    context.action.setTypeMode(\n                      context.typeMode === TYPEMODE.CAP\n                        ? TYPEMODE.NORMAL\n                        : TYPEMODE.CAP\n                    )\n                  }\n                  label=\"⇪\"\n                  active={context.typeMode === TYPEMODE.CAP}\n                  width=\"1-6\"\n                  heigh=\"med\"\n                ></Button>\n                <Button\n                  className=\"Button--borderTop Button--borderLeft\"\n                  onEnd={e => context.action.append(\"\\n\")}\n                  label=\" ⏎\"\n                  heigh=\"med\"\n                  width=\"1-3\"\n                ></Button>\n\n                <Button\n                  className=\"Button--borderTop Button--borderLeft Button--negative\"\n                  onEnd={e => context.action.orientation(ORIENTATION.R)}\n                  label=\"R\"\n                  active={true}\n                  width=\"1-6\"\n                  heigh=\"med\"\n                ></Button>\n              </Fragment>\n            )}\n          </div>\n        </div>\n      )}\n    </UIConsumer>\n  );\n}\n\nexport default KeyboardNine;\n","import React from \"react\";\nimport \"./styles.css\";\nimport { UIConsumer } from \"../../store\";\nimport { KEYS } from \"../../settings\";\nimport Button from \"../Button\";\n\nfunction Key({ id, className }) {\n  return (\n    <UIConsumer>\n      {context => (\n        <Button\n          className={`${\n            className ? `${className} ` : \"\"\n          }Button--font-big Button--key`}\n          onStart={e => context.action.startKeyPress(id)}\n          label={KEYS[id].label[context.typeMode]}\n          width=\"1-8\"\n          heigh=\"med\"\n        ></Button>\n      )}\n    </UIConsumer>\n  );\n}\n\nexport default Key;\n","import React, { Fragment } from \"react\";\nimport \"./styles.css\";\nimport Key from \"../Key\";\nimport Button from \"../Button\";\nimport { TYPEMODE, ORIENTATION, KEYBOARD } from \"../../settings\";\n\nimport { UIConsumer } from \"../../store\";\n\nfunction KeyboardClassic() {\n  return (\n    <UIConsumer>\n      {context => (\n        <div className=\"KeyboardClassic\">\n          <div className=\"KeyboardClassic__main\">\n            {\"QZDPJGWB\".split(\"\").map(item => (\n              <Key\n                key={`key${item}`}\n                className=\"Button--borderTopBlack\"\n                id={`key${item}`}\n              />\n            ))}\n            {\"YCNLUSTM\".split(\"\").map(item => (\n              <Key\n                key={`key${item}`}\n                className=\"Button--borderTop\"\n                id={`key${item}`}\n              />\n            ))}\n            {\"XFOAEIHR\".split(\"\").map(item => (\n              <Key\n                key={`key${item}`}\n                className=\"Button--borderTop\"\n                id={`key${item}`}\n              />\n            ))}\n\n            {\"VK\".split(\"\").map(item => (\n              <Key\n                key={`key${item}`}\n                className=\"Button--borderTop\"\n                id={`key${item}`}\n              />\n            ))}\n\n            <Button\n              className=\"Button--borderTop Button--borderLeft\"\n              onEnd={e => context.action.append(\" \")}\n              label=\"Space\"\n              width=\"9-16\"\n              heigh=\"med\"\n            ></Button>\n\n            <Fragment>\n              <Button\n                className=\"Button--borderTop Button--borderLeft\"\n                onStart={e => context.action.startBackspace()}\n                onEnd={e => context.action.endBackspace()}\n                label=\"⌫\"\n                width=\"3-16\"\n                heigh=\"med\"\n              ></Button>\n\n              <Button\n                className=\"Button--borderTop Button--negative\"\n                onEnd={e => context.action.orientation(ORIENTATION.L)}\n                label=\"L\"\n                active={context.orientation === ORIENTATION.L}\n                width=\"1-6\"\n                heigh=\"med\"\n              ></Button>\n\n              <Button\n                className=\"Button--borderTop Button--borderLeft\"\n                label=\"🌐\"\n                onEnd={e => context.action.setKeyboardStyle(KEYBOARD.NINE)}\n                width=\"1-6\"\n                heigh=\"med\"\n              ></Button>\n\n              <Button\n                className=\"Button--borderTop Button--borderLeft\"\n                onEnd={e =>\n                  context.action.setTypeMode(\n                    context.typeMode === TYPEMODE.PUNCTUATION\n                      ? TYPEMODE.NORMAL\n                      : TYPEMODE.PUNCTUATION\n                  )\n                }\n                label=\"012?!\"\n                active={context.typeMode === TYPEMODE.PUNCTUATION}\n                width=\"1-6\"\n                heigh=\"med\"\n              ></Button>\n\n              {context.orientation === ORIENTATION.R ? (\n                <Fragment>\n                  <Button\n                    className=\"Button--borderTop Button--borderLeft\"\n                    onEnd={e => context.action.append(\"\\n\")}\n                    label=\" ‎⏎\"\n                    heigh=\"med\"\n                    width=\"1-6\"\n                  ></Button>\n\n                  <Button\n                    className=\"Button--borderTop Button--borderLeft\"\n                    onEnd={e =>\n                      context.action.setTypeMode(\n                        context.typeMode === TYPEMODE.CAP\n                          ? TYPEMODE.NORMAL\n                          : TYPEMODE.CAP\n                      )\n                    }\n                    label=\"⇪\"\n                    active={context.typeMode === TYPEMODE.CAP}\n                    width=\"1-6\"\n                    heigh=\"med\"\n                  ></Button>\n                </Fragment>\n              ) : (\n                <Fragment>\n                  <Button\n                    className=\"Button--borderTop Button--borderLeft\"\n                    onEnd={e =>\n                      context.action.setTypeMode(\n                        context.typeMode === TYPEMODE.CAP\n                          ? TYPEMODE.NORMAL\n                          : TYPEMODE.CAP\n                      )\n                    }\n                    label=\"⇪\"\n                    active={context.typeMode === TYPEMODE.CAP}\n                    width=\"1-6\"\n                    heigh=\"med\"\n                  ></Button>\n\n                  <Button\n                    className=\"Button--borderTop Button--borderLeft\"\n                    onEnd={e => context.action.append(\"\\n\")}\n                    label=\" ‎⏎\"\n                    heigh=\"med\"\n                    width=\"1-6\"\n                  ></Button>\n                </Fragment>\n              )}\n              <Button\n                className=\"Button--borderTop Button--borderLeft Button--negative\"\n                onEnd={e => context.action.orientation(ORIENTATION.R)}\n                label=\"R\"\n                active={context.orientation === ORIENTATION.R}\n                width=\"1-6\"\n                heigh=\"med\"\n              ></Button>\n            </Fragment>\n          </div>\n        </div>\n      )}\n    </UIConsumer>\n  );\n}\n\nexport default KeyboardClassic;\n","import React from \"react\";\nimport \"./styles.css\";\nimport Text from \"../Text\";\nimport KeyboardNine from \"../KeyboardNine\";\nimport KeyboardClassic from \"../KeyboardClassic\";\nimport { KEYBOARD } from \"../../settings\";\n\nimport { UIProvider, UIConsumer } from \"../../store\";\n\nfunction App() {\n  return (\n    <UIProvider>\n      <UIConsumer>\n        {context => (\n          <div className=\"App\">\n            <div className=\"App__text\">\n              <Text context={context} />\n            </div>\n            <div className=\"App__keyboard\">\n              {context.keyboardStyle === KEYBOARD.NINE ? (\n                <KeyboardNine />\n              ) : null}\n              {context.keyboardStyle === KEYBOARD.CLASSIC ? (\n                <KeyboardClassic />\n              ) : null}\n            </div>\n          </div>\n        )}\n      </UIConsumer>\n    </UIProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}